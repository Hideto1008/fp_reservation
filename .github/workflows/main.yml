name: Run rspec, rubocop

on:
  push:
    branches:
      - main
      - "**"

env:
  MYSQL_ROOT_PASSWORD: password
  MYSQL_DB: fp_app_test

jobs:
  rspec:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: fp_app_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.3' 
          bundler-cache: true

      - name: Install MySQL Client
        run: sudo apt-get update && sudo apt-get install -y mysql-client

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            mysqladmin ping -h 127.0.0.1 -u root -ppassword --silent && break
            echo "Waiting for MySQL..."
            sleep 5
          done

      - name: Install dependencies
        working-directory: fp_app
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: Database create and migrate
        working-directory: fp_app
        run: |
          cp config/database.yml.ci config/database.yml
          bundle exec rails db:create RAILS_ENV=test
          bundle exec rails db:migrate RAILS_ENV=test

      - name: Run RSpec
        working-directory: fp_app
        run: bundle exec rspec

  rubocop:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.3'
          bundler-cache: true

      - name: Install dependencies
        working-directory: fp_app
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3 --path vendor/bundle

      - name: Run Rubocop
        working-directory: fp_app
        run: bundle exec rubocop
